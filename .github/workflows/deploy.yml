################################################################################
# deploy.yml
# GitHub Actions Workflow for deploying phamt to PyPI.
# by Noah C. Benson

name: Deploy

# We run on eithe pushes or pulls into main
on:
  # We only run this manually.
  workflow_dispatch:

jobs:
  deploy:
    name: ${{matrix.version}}/${{matrix.os}}/${{matrix.arch}} - Deploy
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        arch:
          - 'x64'
        include:
          - {"os": "windows-latest", "arch": "x86", "version": "3.6"}
          - {"os": "windows-latest", "arch": "x86", "version": "3.7"}
          - {"os": "windows-latest", "arch": "x86", "version": "3.8"}
          - {"os": "windows-latest", "arch": "x86", "version": "3.9"}
          - {"os": "windows-latest", "arch": "x86", "version": "3.10"}
          - {"os": "ubuntu-latest", "arch": "source", "version": "3.6"}
          - {"os": "ubuntu-latest", "arch": "source", "version": "3.7"}
          - {"os": "ubuntu-latest", "arch": "source", "version": "3.8"}
          - {"os": "ubuntu-latest", "arch": "source", "version": "3.9"}
          - {"os": "ubuntu-latest", "arch": "source", "version": "3.10"}
    # The job environment.
    env:
      OS: ${{ matrix.os }}
      ARCH: ${{ matrix.arch }}
      PYTHON: ${{ matrix.version }}
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
    # The steps in the job.
    steps:
      # Check out the repository (goes to $GITHUB_WORKSPACE)
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '2'
      # Get the brarnch name.
      - name: Extract Branch Name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: getbranch
      # Setup the Python Environment.
      - name: Setup Python Environment
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.version }}
          architecture: ${{ matrix.arch }}
      - name: Install Twine
        run: |
          pip install twine
      # Log the Python Version
      - name: Display Python version
        run: python --version
      # Run the actual tests.
      - name: Run Tests
        run: |
          python setup.py build
          python setup.py install
          cd ~
          python -m unittest phamt.test
      - name: Build and Upload Binary Distribution
        if: matrix.arch != 'source'
        run: |
          rm dist/*
          python setup.py bdist
          twine upload -r testpypi dist/*
      - name: Build and Upload Source Distribution
        if: matrix.arch == 'source'
        run: |
          rm dist/*
          python setup.py sdist
          twine upload -r testpypi dist/*
