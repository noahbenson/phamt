################################################################################
# deploy.yml
# GitHub Actions Workflow for deploying phamt to PyPI.
# by Noah C. Benson

name: Deploy to PyPI

# We run on eithe pushes or pulls into main
on:
  # We only run this manually.
  workflow_dispatch:

jobs:
  deploy-source:
    name: Source
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      TWINE_DEST: testpypi
    steps:
      # Check out the repository (goes to $GITHUB_WORKSPACE)
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '2'
      # Setup the Python Environment.
      - name: Setup Python Environment
        uses: actions/setup-python@v3
        with:
          python-version: 3
          architecture: x64
      - name: Install Twine
        run: |
          pip install twine
      # Run the actual tests.
      - name: Run Tests
        run: |
          python setup.py build
          python setup.py install
          cd ~
          python -m unittest phamt.test
      - name: Build and Upload Source Distribution
        run: |
          rm dist/*
          python setup.py sdist
          twine upload -r $TWINE_DEST dist/phamt-*.tar.gz
  deploy-nonlinux:
    name: ${{matrix.os}} [${{matrix.arch}}] - py${{matrix.version}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        version:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
        os:
          - windows-latest
          - macos-latest
        arch:
          - 'x64'
        include:
          - {"os":"windows-latest", "arch":"x86", "version":"3.6"}
          - {"os":"windows-latest", "arch":"x86", "version":"3.7"}
          - {"os":"windows-latest", "arch":"x86", "version":"3.8"}
          - {"os":"windows-latest", "arch":"x86", "version":"3.9"}
          - {"os":"windows-latest", "arch":"x86", "version":"3.10"}
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      TWINE_DEST: testpypi
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '2'
      - name: Setup Python Environment
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.version }}
          architecture: ${{ matrix.arch }}
      - name: Install Twine
        run: |
          pip install twine
      - name: Install Wheel
        run: |
          pip install wheel
      - name: Run Tests
        run: |
          python setup.py build
          python setup.py install
          cd ~
          python -m unittest phamt.test
      - name: Build Binary Distribution
        run: |
          rm dist/*
          python setup.py bdist_wheel
      - name: Upload Binary Distribution
        run: |
          cd dist
          twine upload -r testpypi *.whl
  deploy-linux-x86_64:
    name: Linux [x86_64] - All
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      TWINE_DEST: testpypi
    steps:
      # Check out the repository (goes to $GITHUB_WORKSPACE)
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '2'
      - name: Setup Python Environment
        uses: actions/setup-python@v3
        with:
          python-version: 3
          architecture: x64
      - name: Install Twine
        run: |
          pip install twine
      - name: Build Wheels
        uses: docker://quay.io/pypa/manylinux_2_24_x86_64
        with:
          args: bash /github/workspace/build-wheels.sh manylinux_2_24_x86_64
      - name: Upload Binary Distribution
        run: |
          twine upload -r $TWINE_DEST wheels/*.whl
  deploy-linux-i686:
    name: Linux [i686] - All
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      TWINE_DEST: testpypi
    steps:
      # Check out the repository (goes to $GITHUB_WORKSPACE)
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '2'
      - name: Setup Python Environment
        uses: actions/setup-python@v3
        with:
          python-version: 3
          architecture: x64
      - name: Install Twine
        run: |
          pip install twine
      - name: Build Wheels
        uses: docker://quay.io/pypa/manylinux_2_24_i686
        with:
          args: bash /github/workspace/build-wheels.sh manylinux_2_24_i686
      - name: Upload Binary Distribution
        run: |
          twine upload -r $TWINE_DEST wheels/*.whl
